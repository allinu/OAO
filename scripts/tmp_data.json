{
  "bd30c386630e11eb940c9801a7b3b0d7": {
    "alt_path": "bd30c386630e11eb940c9801a7b3b0d7",
    "toc": "<div class=\"toc\">\n<ul>\n<li><a href=\"#author-liona-maskros-amp108amp105amp111amp110amp97amp99amp99amp64amp49amp54amp51amp46amp99amp111amp109\">@Author: Liona Maskros &#108;&#105;&#111;&#110;&#97;&#99;&#99;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;</a></li>\n<li><a href=\"#date-2021-01-27-122033\">@Date: 2021-01-27 12:20:33</a></li>\n<li><a href=\"#last-modified-by-liona-maskros-amp108amp105amp111amp110amp97amp99amp99amp64amp49amp54amp51amp46amp99amp111amp109\">@Last Modified by: Liona Maskros &#108;&#105;&#111;&#110;&#97;&#99;&#99;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;</a></li>\n<li><a href=\"#last-modified-time-2021-01-30-231814\">@Last Modified time: 2021-01-30 23:18:14</a></li>\n</ul>\n</div>\n",
    "toc_tokens": [
      {
        "level": 1,
        "id": "author-liona-maskros-amp108amp105amp111amp110amp97amp99amp99amp64amp49amp54amp51amp46amp99amp111amp109",
        "name": "@Author: Liona Maskros \u0002amp\u0003#108;\u0002amp\u0003#105;\u0002amp\u0003#111;\u0002amp\u0003#110;\u0002amp\u0003#97;\u0002amp\u0003#99;\u0002amp\u0003#99;\u0002amp\u0003#64;\u0002amp\u0003#49;\u0002amp\u0003#54;\u0002amp\u0003#51;\u0002amp\u0003#46;\u0002amp\u0003#99;\u0002amp\u0003#111;\u0002amp\u0003#109;",
        "children": []
      },
      {
        "level": 1,
        "id": "date-2021-01-27-122033",
        "name": "@Date: 2021-01-27 12:20:33",
        "children": []
      },
      {
        "level": 1,
        "id": "last-modified-by-liona-maskros-amp108amp105amp111amp110amp97amp99amp99amp64amp49amp54amp51amp46amp99amp111amp109",
        "name": "@Last Modified by: Liona Maskros \u0002amp\u0003#108;\u0002amp\u0003#105;\u0002amp\u0003#111;\u0002amp\u0003#110;\u0002amp\u0003#97;\u0002amp\u0003#99;\u0002amp\u0003#99;\u0002amp\u0003#64;\u0002amp\u0003#49;\u0002amp\u0003#54;\u0002amp\u0003#51;\u0002amp\u0003#46;\u0002amp\u0003#99;\u0002amp\u0003#111;\u0002amp\u0003#109;",
        "children": []
      },
      {
        "level": 1,
        "id": "last-modified-time-2021-01-30-231814",
        "name": "@Last Modified time: 2021-01-30 23:18:14",
        "children": []
      }
    ],
    "content": "<h1 id=\"author-liona-maskros-amp108amp105amp111amp110amp97amp99amp99amp64amp49amp54amp51amp46amp99amp111amp109\">@Author: Liona Maskros <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#108;&#105;&#111;&#110;&#97;&#99;&#99;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;\">&#108;&#105;&#111;&#110;&#97;&#99;&#99;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;</a></h1>\n<h1 id=\"date-2021-01-27-122033\">@Date: 2021-01-27 12:20:33</h1>\n<h1 id=\"last-modified-by-liona-maskros-amp108amp105amp111amp110amp97amp99amp99amp64amp49amp54amp51amp46amp99amp111amp109\">@Last Modified by: Liona Maskros <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#108;&#105;&#111;&#110;&#97;&#99;&#99;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;\">&#108;&#105;&#111;&#110;&#97;&#99;&#99;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;</a></h1>\n<h1 id=\"last-modified-time-2021-01-30-231814\">@Last Modified time: 2021-01-30 23:18:14</h1>\n<p>import markdown\nfrom rich.console import Console\nimport os\nimport uuid\nimport json</p>\n<p>console = Console()</p>\n<p>DATA = {}\nextensions = [\n    &ldquo;toc&rdquo;,\n    &ldquo;codehilite&rdquo;,\n    &ldquo;footnotes&rdquo;,\n    &ldquo;meta&rdquo;,\n    &ldquo;fenced_code&rdquo;,\n    &ldquo;tables&rdquo;,\n    &ldquo;smarty&rdquo;,\n]</p>\n<p>def make_blog_all_list():\n    &ldquo;&rdquo;&ldquo;make markdown file info into one Json file&rdquo;&ldquo;&rdquo;\n    for path, dir_list, file_list in os.walk(&lsquo;.&rsquo;):\n        for file_name in file_list:\n            console.log(path, file_name)\n            if file_name != &ldquo;.DS_Store&rdquo;:\n                md_file_path = os.path.join(path, file_name)\n                tmp_data = md2json(md_file_path)\n                console.log(tmp_data)\n            else:\n                pass\n    # self.console.log(data)\n    data = json.dumps(DATA, ensure_ascii=False)\n    # self.console.log(data)\n    with open(&ldquo;./tmp_data.json&rdquo;, &ldquo;w&rdquo;, encoding=&rdquo;utf-8&rdquo;) as file:\n        file.write(data)\n    console.log(&ldquo;Local markdown file covert completed.&rdquo;)</p>\n<p>def md2json(md_file_path):\n    &ldquo;&rdquo;&ldquo;main program</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">main</span> <span class=\"n\">program</span> <span class=\"n\">to</span> <span class=\"n\">realize</span> <span class=\"n\">convert</span> <span class=\"n\">function</span>\n\n<span class=\"n\">Args</span><span class=\"p\">:</span>\n    <span class=\"n\">md_file_path</span> <span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span> <span class=\"n\">the</span> <span class=\"n\">markdown</span> <span class=\"nb\">file</span> <span class=\"kn\">import</span> <span class=\"nn\">from</span>\n    <span class=\"n\">json_file_path</span> <span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span> <span class=\"n\">the</span> <span class=\"n\">json</span> <span class=\"nb\">file</span> <span class=\"n\">will</span> <span class=\"n\">save</span> <span class=\"n\">to</span>\n\n<span class=\"n\">Returns</span><span class=\"p\">:</span>\n    <span class=\"nb\">dict</span><span class=\"p\">:</span> <span class=\"n\">the</span> <span class=\"n\">markdown</span> <span class=\"nb\">file</span> <span class=\"n\">content</span>\n\n<span class=\"n\">Raises</span><span class=\"p\">:</span>\n    <span class=\"n\">the</span> <span class=\"n\">path</span> <span class=\"ow\">is</span> <span class=\"n\">wrong</span>\n\n<span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">data = {}</span>\n<span class=\"s2\">with open(md_file_path) as md_file:</span>\n<span class=\"s2\">    md = markdown.Markdown(extensions=extensions)</span>\n<span class=\"s2\">    html = md.convert(md_file.read())</span>\n<span class=\"s2\">    tmp_data = md.Meta</span>\n<span class=\"s2\">    console.log(md.Meta)</span>\n<span class=\"s2\">    # use uuid to solve the same name</span>\n<span class=\"s2\">    alt_path = uuid.uuid1().hex</span>\n<span class=\"s2\">    tmp_data[&quot;alt_path&quot;] = alt_path</span>\n<span class=\"s2\">    tmp_data[&quot;toc&quot;] = md.toc</span>\n<span class=\"s2\">    tmp_data[&quot;toc_tokens&quot;] = md.toc_tokens</span>\n<span class=\"s2\">    tmp_data[&quot;content&quot;] = html</span>\n<span class=\"s2\">    data[alt_path] = tmp_data</span>\n<span class=\"s2\">    DATA[alt_path] = tmp_data</span>\n<span class=\"s2\">    # self.console.log(md.toc_tokens)</span>\n<span class=\"s2\">console.log(data)</span>\n<span class=\"s2\">console.log(md_file_path + &quot; -&gt; md2json convert done&quot;)</span>\n<span class=\"s2\">return data</span>\n</code></pre></div>\n\n<p>def run():\n    make_blog_all_list()</p>\n<p>if <strong>name</strong> == &ldquo;<strong>main</strong>&rdquo;:\n    run()</p>"
  },
  "bd5faebc630e11eb940c9801a7b3b0d7": {
    "author": [
      "Liona Maskros"
    ],
    "created_date": [
      "2021-01-29 20:32:59"
    ],
    "modified_date": [
      "2021-01-29 20:35:01"
    ],
    "title": [
      "Mac 搭建开发环境"
    ],
    "tags": [
      "Mac",
      "笔记",
      "技巧"
    ],
    "description": [
      "在 Mac 下搭建一个合格的开发环境"
    ],
    "categories": [
      "笔记"
    ],
    "publish": [
      "true"
    ],
    "show_comments": [
      "true"
    ],
    "secret_code": [
      ""
    ],
    "alt_path": "bd5faebc630e11eb940c9801a7b3b0d7",
    "toc": "<div class=\"toc\">\n<ul>\n<li><a href=\"#mac\">Mac 搭建开发环境</a><ul>\n<li><a href=\"#command-line-tools\">Command Line Tools</a></li>\n<li><a href=\"#git\">Git</a></li>\n<li><a href=\"#ssh\">SSH</a></li>\n<li><a href=\"#iterm2\">Iterm2</a></li>\n<li><a href=\"#kitty\">Kitty</a></li>\n<li><a href=\"#zsh\">zsh 的配置</a></li>\n<li><a href=\"#tmux\">Tmux 的配置</a></li>\n<li><a href=\"#homebrew\">Homebrew</a><ul>\n<li><a href=\"#nodejs\">Nodejs</a></li>\n<li><a href=\"#python3\">python3</a></li>\n</ul>\n</li>\n<li><a href=\"#neovim\">Neovim</a></li>\n</ul>\n</li>\n</ul>\n</div>\n",
    "toc_tokens": [
      {
        "level": 1,
        "id": "mac",
        "name": "Mac 搭建开发环境",
        "children": [
          {
            "level": 2,
            "id": "command-line-tools",
            "name": "Command Line Tools",
            "children": []
          },
          {
            "level": 2,
            "id": "git",
            "name": "Git",
            "children": []
          },
          {
            "level": 2,
            "id": "ssh",
            "name": "SSH",
            "children": []
          },
          {
            "level": 2,
            "id": "iterm2",
            "name": "Iterm2",
            "children": []
          },
          {
            "level": 2,
            "id": "kitty",
            "name": "Kitty",
            "children": []
          },
          {
            "level": 2,
            "id": "zsh",
            "name": "zsh 的配置",
            "children": []
          },
          {
            "level": 2,
            "id": "tmux",
            "name": "Tmux 的配置",
            "children": []
          },
          {
            "level": 2,
            "id": "homebrew",
            "name": "Homebrew",
            "children": [
              {
                "level": 3,
                "id": "nodejs",
                "name": "Nodejs",
                "children": []
              },
              {
                "level": 3,
                "id": "python3",
                "name": "python3",
                "children": []
              }
            ]
          },
          {
            "level": 2,
            "id": "neovim",
            "name": "Neovim",
            "children": []
          }
        ]
      }
    ],
    "content": "<h1 id=\"mac\">Mac 搭建开发环境</h1>\n<blockquote>\n<p>本文主要侧重于使用终端进行开发</p>\n<p>主要的包括 Command Line Tools、Git、ssh、iTerm2、Kitty、zsh、tmux、Homebrew、Neovim 的配置</p>\n<p>命令行输入密码是不显示的，是正常的</p>\n</blockquote>\n<h2 id=\"command-line-tools\">Command Line Tools</h2>\n<p>这个是所有开发的基础，必须安装的部分。</p>\n<p>安装也简单：直接打开启动器 -&gt; 其他 -&gt; 终端，输入 <code>git</code>会自动提示安装，只要点击确定就行了。</p>\n<p>可能会遇到下载失败的情况，如果遇到这种情况，不要着急，打开 Apple 开发者官网，在里面下下载，然后再安装就可以了，这是<a href=\"https://developer.apple.com/download/more/\">页面链接</a>，选择一个合适的<code>Command Line Tools for Xcode</code>下载即可，一般最新的就行。</p>\n<h2 id=\"git\">Git</h2>\n<p>完成上面一步，git 就已经安装完毕了。</p>\n<p>git 安装完毕后使用下面的命令设置 git 提交的用户名和邮箱</p>\n<div class=\"codehilite\"><pre><span></span><code>git config --global user.name <span class=\"s2\">&quot;name&quot;</span>\ngit config --global user.email xxxx@xxx.xx\n</code></pre></div>\n\n<h2 id=\"ssh\">SSH</h2>\n<p>完成上面一步，建议生成 ssh 秘钥，就可以使用 GitHub 上面的 ssh 方式 clone 项目了。</p>\n<p>在终端里面输入以下命令，并摁下回车键</p>\n<div class=\"codehilite\"><pre><span></span><code>ssh-keygen\n</code></pre></div>\n\n<p>程序会询问一些问题，一直敲回车就可以了。</p>\n<p>然后输入以下命令，获取生成的公钥</p>\n<div class=\"codehilite\"><pre><span></span><code>cat ~/.ssh/id_rsa.pub\n</code></pre></div>\n\n<p>然后复制返回的结果，打开 GitHub，在个人设置页面，添加 ssh 公钥，就算配置完成了。</p>\n<h2 id=\"iterm2\">Iterm2</h2>\n<p>ITerm2 是一个类似 Mac 自带终端的一个程序，可以配置的选项更多，可以更好的提升用户体验。在<a href=\"https://iterm2.com/\">此页面</a> 下载安装即可。</p>\n<h2 id=\"kitty\">Kitty</h2>\n<p>Kitty 也是一个类似 iTerm2 的程序，适合进阶使用，有更好的显示效果，但是配置也比较繁琐一点，在<a href=\"https://sw.kovidgoyal.net/kitty/\">此页面</a> 下载</p>\n<h2 id=\"zsh\">zsh 的配置</h2>\n<p>zsh 是一个 shell 名称，区别于 bash，使用的人数还是很多的，Mac 自带 zsh，但是不是很好看，所以这里主要说两个方面：<a href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\">主题配置</a>、<a href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins\">插件配置</a></p>\n<p>我主要介绍 <a href=\"https://ohmyz.sh/\">OhMyZsh</a> 的方式，等你能力变强，或者现在就是一个进阶玩家，请自行配置</p>\n<p>执行下面的步骤进行安装 <a href=\"https://ohmyz.sh/\">OhMyZsh</a></p>\n<div class=\"codehilite\"><pre><span></span><code> sh -c <span class=\"s2\">&quot;</span><span class=\"k\">$(</span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class=\"k\">)</span><span class=\"s2\">&quot;</span>\n</code></pre></div>\n\n<p>然后输入登录密码，就可以了。</p>\n<h2 id=\"tmux\">Tmux 的配置</h2>\n<p>Tmux 是一个终端复用工具，能在同一个终端下面完成很多操作，可以实现分割屏幕。</p>\n<p>这里我介绍的是<a href=\"https://github.com/gpakosz/.tmux\">这个</a>，类似于 OhMyZsh，是个现成的配置文件。安装步骤如下</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nb\">cd</span>\ngit clone https://github.com/gpakosz/.tmux.git\nln -s -f .tmux/.tmux.conf\ncp .tmux/.tmux.conf.local .\n</code></pre></div>\n\n<h2 id=\"homebrew\">Homebrew</h2>\n<p>Homebrew 是一个 Mac 下相当好用的包管理器，可以方便的安装开发环境</p>\n<p>安装步骤如下</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nb\">export</span> <span class=\"nv\">HOMEBREW_CORE_GIT_REMOTE</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">HOMEBREW_BOTTLE_DOMAIN</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span>\n\ngit clone --depth<span class=\"o\">=</span><span class=\"m\">1</span> https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/install.git brew-install\n/bin/bash -c <span class=\"s2\">&quot;</span><span class=\"k\">$(</span>sed <span class=\"s1\">&#39;s|^HOMEBREW_BREW_GIT_REMOTE=.*$|HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;|g&#39;</span> brew-install/install.sh<span class=\"k\">)</span><span class=\"s2\">&quot;</span>\nrm -rf brew-install\n\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&#39;</span> &gt;&gt; ~/.bash_profile\n<span class=\"nb\">source</span> ~/.bash_profile\n\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&#39;</span> &gt;&gt; ~/.zprofile\n<span class=\"nb\">source</span> ~/.zprofile\n</code></pre></div>\n\n<h3 id=\"nodejs\">Nodejs</h3>\n<div class=\"codehilite\"><pre><span></span><code>brew install node@14\n</code></pre></div>\n\n<h3 id=\"python3\">python3</h3>\n<div class=\"codehilite\"><pre><span></span><code>brew install python@3.9\n</code></pre></div>\n\n<h2 id=\"neovim\">Neovim</h2>\n<p>终端下的编辑器之神，小白慎用</p>\n<div class=\"codehilite\"><pre><span></span><code>brew install neovim\n</code></pre></div>\n\n<p>neovim 我使用的是<a href=\"https://github.com/hardcoreplayers/ThinkVim\">这个</a></p>\n<p>安装步骤如下</p>\n<div class=\"codehilite\"><pre><span></span><code>brew install jarvim\njarvim -g\n</code></pre></div>\n\n<p>然后根据自己的需要选择就可以了，程序会自动下载，感谢 Thinkvim 的作者。</p>"
  },
  "bd8b97d4630e11eb940c9801a7b3b0d7": {
    "author": [
      "Liona Maskros"
    ],
    "created_date": [
      "2021-01-27 11:01:36"
    ],
    "modified_date": [
      "2021-01-29 01:21:44"
    ],
    "title": [
      "伪元素与伪类"
    ],
    "tags": [
      "css",
      "前端",
      "笔记"
    ],
    "description": [
      "伪元素与伪类的使用可以帮助我们更好的控制元素"
    ],
    "categories": [
      "前端技术"
    ],
    "publish": [
      "true"
    ],
    "show_comments": [
      "true"
    ],
    "secret_code": [
      ""
    ],
    "alt_path": "bd8b97d4630e11eb940c9801a7b3b0d7",
    "toc": "<div class=\"toc\">\n<ul>\n<li><a href=\"#pseudo\">Pseudo 伪元素与伪类</a><ul>\n<li><a href=\"#_1\">伪类</a><ul>\n<li><a href=\"#_2\">示例</a></li>\n</ul>\n</li>\n<li><a href=\"#_3\">伪元素</a><ul>\n<li><a href=\"#_4\">示例</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n",
    "toc_tokens": [
      {
        "level": 1,
        "id": "pseudo",
        "name": "Pseudo 伪元素与伪类",
        "children": [
          {
            "level": 2,
            "id": "_1",
            "name": "伪类",
            "children": [
              {
                "level": 3,
                "id": "_2",
                "name": "示例",
                "children": []
              }
            ]
          },
          {
            "level": 2,
            "id": "_3",
            "name": "伪元素",
            "children": [
              {
                "level": 3,
                "id": "_4",
                "name": "示例",
                "children": []
              }
            ]
          }
        ]
      }
    ],
    "content": "<h1 id=\"pseudo\">Pseudo 伪元素与伪类</h1>\n<ol>\n<li>伪类：是选择器的一种，用于选择处于特定状态的元素，比如首个元素、鼠标悬浮的元素，以<code>:</code>开头</li>\n<li>伪元素：与伪类类似，但是是以<code>::</code>开头</li>\n</ol>\n<h2 id=\"_1\">伪类</h2>\n<h3 id=\"_2\">示例</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">article</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>xxxxxxxxxxxxxxxxxxx<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>xxxxxxxxxxxxxxxxxxx<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>xxxxxxxxxxxxxxxxxxx<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>xxxxxxxxxxxxxxxxxxx<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>xxxxxxxxxxxxxxxxxxx<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>xxxxxxxxxxxxxxxxxxx<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">article</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">.</span><span class=\"nc\">article</span> <span class=\"nt\">p</span><span class=\"p\">:</span><span class=\"nd\">first-child</span> <span class=\"p\">{</span>\n            <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mi\">120</span><span class=\"kt\">%</span><span class=\"p\">;</span>\n            <span class=\"k\">font-weight</span><span class=\"p\">:</span> <span class=\"kc\">bold</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n\n<hr />\n<table>\n<thead>\n<tr>\n<th align=\"left\">选择器</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:active\"><code>:active</code></a></td>\n<td align=\"left\">在用户激活（例如点击）元素的时候匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:any-link\"><code>:any-link</code></a></td>\n<td align=\"left\">匹配一个链接的<code>:link</code>和<code>:visited</code>状态。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:blank\"><code>:blank</code></a></td>\n<td align=\"left\">匹配空输入值的 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\">``元素</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:checked\"><code>:checked</code></a></td>\n<td align=\"left\">匹配处于选中状态的单选或者复选框。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:current\"><code>:current</code></a></td>\n<td align=\"left\">匹配正在展示的元素，或者其上级元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:default\"><code>:default</code></a></td>\n<td align=\"left\">匹配一组相似的元素中默认的一个或者更多的 UI 元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:dir\"><code>:dir</code></a></td>\n<td align=\"left\">基于其方向性（HTML<code>dir</code>属性或者 CSS<code>direction</code>属性的值）匹配一个元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:disabled\"><code>:disabled</code></a></td>\n<td align=\"left\">匹配处于关闭状态的用户界面元素</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:empty\"><code>:empty</code></a></td>\n<td align=\"left\">匹配除了可能存在的空格外，没有子元素的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:enabled\"><code>:enabled</code></a></td>\n<td align=\"left\">匹配处于开启状态的用户界面元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:first\"><code>:first</code></a></td>\n<td align=\"left\">匹配<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Paged_Media\">分页媒体</a> 的第一页。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:first-child\"><code>:first-child</code></a></td>\n<td align=\"left\">匹配兄弟元素中的第一个元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:first-of-type\"><code>:first-of-type</code></a></td>\n<td align=\"left\">匹配兄弟元素中第一个某种类型的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:focus\"><code>:focus</code></a></td>\n<td align=\"left\">当一个元素有焦点的时候匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:focus-visible\"><code>:focus-visible</code></a></td>\n<td align=\"left\">当元素有焦点，且焦点对用户可见的时候匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:focus-within\"><code>:focus-within</code></a></td>\n<td align=\"left\">匹配有焦点的元素，以及子代元素有焦点的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:future\"><code>:future</code></a></td>\n<td align=\"left\">匹配当前元素之后的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:hover\"><code>:hover</code></a></td>\n<td align=\"left\">当用户悬浮到一个元素之上的时候匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:indeterminate\"><code>:indeterminate</code></a></td>\n<td align=\"left\">匹配未定态值的 UI 元素，通常为<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\">复选框</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:in-range\"><code>:in-range</code></a></td>\n<td align=\"left\">用一个区间匹配元素，当值处于区间之内时匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:invalid\"><code>:invalid</code></a></td>\n<td align=\"left\">匹配诸如<code>&lt;input&gt;</code>的位于不可用状态的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:lang\"><code>:lang</code></a></td>\n<td align=\"left\">基于语言（HTML<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/lang\">lang</a> 属性的值）匹配元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:last-child\"><code>:last-child</code></a></td>\n<td align=\"left\">匹配兄弟元素中最末的那个元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:last-of-type\"><code>:last-of-type</code></a></td>\n<td align=\"left\">匹配兄弟元素中最后一个某种类型的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:left\"><code>:left</code></a></td>\n<td align=\"left\">在<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Pages\">分页媒体</a> 中，匹配左手边的页。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:link\"><code>:link</code></a></td>\n<td align=\"left\">匹配未曾访问的链接。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:local-link\"><code>:local-link</code></a></td>\n<td align=\"left\">匹配指向和当前文档同一网站页面的链接。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:is\"><code>:is()</code></a></td>\n<td align=\"left\">匹配传入的选择器列表中的任何选择器。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:not\"><code>:not</code></a></td>\n<td align=\"left\">匹配作为值传入自身的选择器未匹配的物件。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-child\"><code>:nth-child</code></a></td>\n<td align=\"left\">匹配一列兄弟元素中的元素——兄弟元素按照 an+b 形式的式子进行匹配（比如 2n+1 匹配元素 1、3、5、7 等。即所有的奇数个）。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-of-type\"><code>:nth-of-type</code></a></td>\n<td align=\"left\">匹配某种类型的一列兄弟元素（比如，<code>&lt;p&gt;</code>元素）——兄弟元素按照 an+b 形式的式子进行匹配（比如 2n+1 匹配元素 1、3、5、7 等。即所有的奇数个）。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-last-child\"><code>:nth-last-child</code></a></td>\n<td align=\"left\">匹配一列兄弟元素，从后往前倒数。兄弟元素按照 an+b 形式的式子进行匹配（比如 2n+1 匹配按照顺序来的最后一个元素，然后往前两个，再往前两个，诸如此类。从后往前数的所有奇数个）。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-last-of-type\"><code>:nth-last-of-type</code></a></td>\n<td align=\"left\">匹配某种类型的一列兄弟元素（比如，<code>&lt;p&gt;</code>元素），从后往前倒数。兄弟元素按照 an+b 形式的式子进行匹配（比如 2n+1 匹配按照顺序来的最后一个元素，然后往前两个，再往前两个，诸如此类。从后往前数的所有奇数个）。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:only-child\"><code>:only-child</code></a></td>\n<td align=\"left\">匹配没有兄弟元素的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:only-of-type\"><code>:only-of-type</code></a></td>\n<td align=\"left\">匹配兄弟元素中某类型仅有的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:optional\"><code>:optional</code></a></td>\n<td align=\"left\">匹配不是必填的 form 元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:out-of-range\"><code>:out-of-range</code></a></td>\n<td align=\"left\">按区间匹配元素，当值不在区间内的的时候匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:past\"><code>:past</code></a></td>\n<td align=\"left\">匹配当前元素之前的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:placeholder-shown\"><code>:placeholder-shown</code></a></td>\n<td align=\"left\">匹配显示占位文字的 input 元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:playing\"><code>:playing</code></a></td>\n<td align=\"left\">匹配代表音频、视频或者相似的能“播放”或者“暂停”的资源的，且正在“播放”的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:paused\"><code>:paused</code></a></td>\n<td align=\"left\">匹配代表音频、视频或者相似的能“播放”或者“暂停”的资源的，且正在“暂停”的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:read-only\"><code>:read-only</code></a></td>\n<td align=\"left\">匹配用户不可更改的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:read-write\"><code>:read-write</code></a></td>\n<td align=\"left\">匹配用户可更改的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:required\"><code>:required</code></a></td>\n<td align=\"left\">匹配必填的 form 元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:right\"><code>:right</code></a></td>\n<td align=\"left\">在<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Pages\">分页媒体</a> 中，匹配右手边的页。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:root\"><code>:root</code></a></td>\n<td align=\"left\">匹配文档的根元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:scope\"><code>:scope</code></a></td>\n<td align=\"left\">匹配任何为参考点元素的的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:valid\"><code>:valid</code></a></td>\n<td align=\"left\">匹配诸如<code>&lt;input&gt;</code>元素的处于可用状态的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:target\"><code>:target</code></a></td>\n<td align=\"left\">匹配当前 URL 目标的元素（例如如果它有一个匹配当前 <a href=\"https://en.wikipedia.org/wiki/Fragment_identifier\">URL 分段</a> 的元素）。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:visited\"><code>:visited</code></a></td>\n<td align=\"left\">匹配已访问链接。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"_3\">伪元素</h2>\n<h3 id=\"_4\">示例</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        xxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        xxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx\n    <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">.</span><span class=\"nc\">article</span> <span class=\"nt\">p</span><span class=\"p\">::</span><span class=\"nd\">first-line</span> <span class=\"p\">{</span>\n        <span class=\"k\">font-weight</span><span class=\"p\">:</span> <span class=\"kc\">bold</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n\n<hr />\n<table>\n<thead>\n<tr>\n<th align=\"left\">选择器</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::after\"><code>::after</code></a></td>\n<td align=\"left\">匹配出现在原有元素的实际内容之后的一个可样式化元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::before\"><code>::before</code></a></td>\n<td align=\"left\">匹配出现在原有元素的实际内容之前的一个可样式化元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-letter\"><code>::first-letter</code></a></td>\n<td align=\"left\">匹配元素的第一个字母。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-line\"><code>::first-line</code></a></td>\n<td align=\"left\">匹配包含此伪元素的元素的第一行。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::grammar-error\"><code>::grammar-error</code></a></td>\n<td align=\"left\">匹配文档中包含了浏览器标记的语法错误的那部分。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::selection\"><code>::selection</code></a></td>\n<td align=\"left\">匹配文档中被选择的那部分。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::spelling-error\"><code>::spelling-error</code></a></td>\n<td align=\"left\">匹配文档中包含了浏览器标记的拼写错误的那部分。</td>\n</tr>\n</tbody>\n</table>"
  },
  "bdb9ac5a630e11eb940c9801a7b3b0d7": {
    "author": [
      "Liona Maskros"
    ],
    "created_date": [
      "2021-01-27 16:29:21"
    ],
    "modified_date": [
      "2021-01-27 23:20:20"
    ],
    "title": [
      "关于我"
    ],
    "tags": [
      "me"
    ],
    "description": [
      "关于我的一些事情"
    ],
    "categories": [
      ""
    ],
    "publish": [
      "true"
    ],
    "show_comments": [
      "true"
    ],
    "secret_code": [
      ""
    ],
    "alt_path": "bdb9ac5a630e11eb940c9801a7b3b0d7",
    "toc": "<div class=\"toc\">\n<ul></ul>\n</div>\n",
    "toc_tokens": [],
    "content": "<p>亲爱的访客朋友：</p>\n<p>你好。</p>\n<p>你现在看到的这个网站是我在一边学习 Vue 和前端知识的时候，搭建的。截止到我写这篇关于的时候，网页才刚刚成形，有很多东西还不完善，我喜欢一边解决问题一边学习，这样既能对自己施加压力来尽快的解决问题，又可以很直接的获得解决问题后的成就感。说来很神奇，我第一个接触的语言就是 HTML，那时候我还在上初中，学的 HTML 和 CSS，那时候真的就是因为好看，就开始学，现在也是。我还记得那时候电脑系统是 Ubuntu，为啥安装这样一个系统呢？就是因为在网上看了一个 Arch 的美化教程，从此就被带上了 Linux 的车，再也下不了车了。后来在学校，无论初中、高中、大学，我都是别人眼中的“技术大佬”、“专业学霸”，但是我知道，我不是，一刻都不曾获得过这些荣誉。我知道“人外有人，天外有天”，我只是胡乱的敲一敲。</p>\n<p>我有了解过 Python、Docker、Go，好吧，其实 Go 语言是来凑数的，了解的不多。还有 HTML、CSS、JS，我当时刚接触前端，也就是我第一次写代码的时候，我没有好好学 JS，现在特别后悔，就像当时有一份真挚的爱情，摆在我的面前我没有好好珍惜。我现在认为 JS 现在很重要，自从 JS 从浏览器走下来的时候，我觉得 JS 的命运被改变了。后来在学校有学习过 C、Java，但都是皮毛。</p>\n<p>高考完，我参军入伍，当了两年的兵，在部队没有收获什么荣誉。参军对一个人的影响是不同的，但就主要分为两个方面：内在和外在。我在部队大部分时间在准备考军校，外在（身体）方面并没有收获什么，你也见到了，我现在很胖。我所在的地方负责看犯人，说实话，无聊的很。但是，有一个很有意思的事情，身边的人都捧着本书看，就是那时候，我才理解了“书中自有黄金屋”。直到现在我都很喜欢读书，喜欢学习新知识、新技术。计算机这个行业，真的是每天都在变化，一段时间不关注，等你再想起来的时候，早已经“物是人非了”。</p>\n<p>在大学，我接触了安全相关行业的知识，那时候很感兴趣，想做一个<del>黑客</del>安全专家，打过 CTF，也拿过奖，但是我不会汇编，不会二进制，都是凭着自己以前的知识储备做的题。后来我放弃了，不是我不懂得坚持，而是我做了取舍。我认为汇编不是一两年能学会的，我不懂硬件基础理论知识，我不了解二极管、也不知道寄存器的原理，差的太多。</p>\n<p>以上，都是我过去的一些经历。</p>\n<p>接下来说：再敲一行代码。</p>\n<p>再敲一行代码，这句话不是我创造的，我不知道谁创造的，我是从杨仕航老师那里借来的，也不知道算不算偷，我跟着杨老师学的 Django2.0 技术，他的博客上面就有这样一句话，我觉的很棒，就拿过来了。再敲一行代码，是每一个热爱编程的人的心里不断重复的一句话，即便我的技术现在还差的远，但是，我一直在我心里对自己说：再敲一行代码，再敲一行代码就睡觉。</p>\n<p>我真的好喜欢敲代码。</p>"
  }
}